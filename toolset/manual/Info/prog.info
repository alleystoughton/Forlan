@FILES
  ["prog"; "The Prog Module";]
@SIGNATURE PROG "prog" [
  @TYPES 
    @TYPE cp
    @DATATYPE accept [ Accept RejectWithFalse RejectOtherwise Unknown]
    @DATATYPE run [ Ans Fail Intermed]
    @TYPE prog
    @DATATYPE step [ Value Error Next]
    @DATATYPE const [ True False Nil]
    @DATATYPE oper [ IsNil IsInt IsNeg IsZero IsPos IsSym IsStr IsPair IsLam Plus Minus Compare Fst Snd ConsSym DeconsSym SymListToStr StrToSymList]
    @DATATYPE concr [ Var Const Int Sym Str Pair Calc Cond App Lam LetSimp LetRec]
  @VALS 
    validLeafPath
    output
    toString
    jforlanEdit
    accept
    run
    validPath
    app
    select
    fromConcr
    toRep
    isRep
    toClosed
    update
    fromClosed
    isValue
    input
    free
    numLeaves
    accepted
    fromStr
    toConcr
    height
    maximumLengthPath
    sym
    toPP
    fromString
    lam
    evaluate
    jforlanNew
    letRec
    step
    equal
    fromRep
    str
    pair
    subst
    letSimp
    toStr
    const
    calc
    compare
    jforlanValidate
    size
    cond
    var
    int
    jforlanPretty
]
@STRUCTURE Prog "prog" PROG
