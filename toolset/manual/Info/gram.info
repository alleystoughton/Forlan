@FILES
  ["gram"; "The Gram Module";]
@SIGNATURE GRAM "gram" [
  @TYPES 
    @TYPE gram
    @TYPE concr
  @VALS 
    findIsomorphism
    eliminateVariableConstraintsOpt
    renameVariables
    output
    toString
    inter
    productions
    parse
    restartOpt
    eliminateEmptyAndUnitProductions
    reachableFromBackwards
    generatedFromVariable
    reachify
    checkPT
    startVariable
    reachified
    inChomskyNormalForm
    eliminateVariableOpt
    emptySet
    eliminateVariable
    hasNoEmptyProductions
    reachableFrom
    fromStr
    toConcr
    chomskyNormalForm
    toPP
    fromReg
    nullableVariables
    parseAlphabetFromVariable
    parseAlphabet
    prefix
    simplified
    eliminateVariableConstraints
    minus
    equal
    fromStrSet
    valid
    compare
    fromSym
    union
    numProductions
    hasNoEmptyOrUnitProductions
    isomorphic
    parsable
    emptyStr
    variables
    closure
    findIsomorphismOpt
    parseAlphabetFromVariableOpt
    numVariables
    parseAlphabetOpt
    isomorphism
    renameAlphabet
    renameVariablesCanonically
    fromConcr
    rev
    input
    concat
    toStrSetOpt
    eliminateEmptyProductions
    generated
    genUnion
    validPT
    fromString
    simplify
    restart
    genConcat
    parseOpt
    toStrSet
    sub
    fromFA
    alphabet
]
@STRUCTURE Gram "gram" GRAM
